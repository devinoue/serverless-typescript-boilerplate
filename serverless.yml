service:
  name: example-serverless-type

custom:
  serverless-layers:
    layersDeploymentBucket: ${env:LAYERS_DEPLOYMENT_BUCKET}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stage: ${opt:stage,"dev"}


plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-layers
  - serverless-dotenv-plugin
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs12.x
  region: ap-northeast-1
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  stage: ${self:custom.stage}

functions:
  hello:
    handler: functions/hello.main
    description: Hello world!
    environment:
      API_KEY: ${env:API_KEY}
    events:
      - http:
          path: hello
          method: get
          cors: true

  dynamo:
    handler: functions/dynamo.main
    description: DynamoDB example
    environment:
      DYNAMO_TABLE: ${env:DYNAMO_TABLE}
    events:
      - http:
          path: dynamo
          method: get
          cors: true

